
testloop:     file format elf64-x86-64

SYMBOL TABLE:
0000000000000318 l    d  .interp	0000000000000000              .interp
0000000000000338 l    d  .note.gnu.property	0000000000000000              .note.gnu.property
0000000000000358 l    d  .note.gnu.build-id	0000000000000000              .note.gnu.build-id
000000000000037c l    d  .note.ABI-tag	0000000000000000              .note.ABI-tag
00000000000003a0 l    d  .gnu.hash	0000000000000000              .gnu.hash
00000000000003c8 l    d  .dynsym	0000000000000000              .dynsym
0000000000000518 l    d  .dynstr	0000000000000000              .dynstr
0000000000000610 l    d  .gnu.version	0000000000000000              .gnu.version
0000000000000630 l    d  .gnu.version_r	0000000000000000              .gnu.version_r
0000000000000690 l    d  .rela.dyn	0000000000000000              .rela.dyn
0000000000000768 l    d  .rela.plt	0000000000000000              .rela.plt
0000000000001000 l    d  .init	0000000000000000              .init
0000000000001020 l    d  .plt	0000000000000000              .plt
00000000000010a0 l    d  .plt.got	0000000000000000              .plt.got
00000000000010b0 l    d  .plt.sec	0000000000000000              .plt.sec
0000000000001120 l    d  .text	0000000000000000              .text
0000000000001368 l    d  .fini	0000000000000000              .fini
0000000000002000 l    d  .rodata	0000000000000000              .rodata
0000000000002030 l    d  .eh_frame_hdr	0000000000000000              .eh_frame_hdr
0000000000002080 l    d  .eh_frame	0000000000000000              .eh_frame
0000000000003d78 l    d  .init_array	0000000000000000              .init_array
0000000000003d80 l    d  .fini_array	0000000000000000              .fini_array
0000000000003d88 l    d  .dynamic	0000000000000000              .dynamic
0000000000003f88 l    d  .got	0000000000000000              .got
0000000000004000 l    d  .data	0000000000000000              .data
0000000000004020 l    d  .bss	0000000000000000              .bss
0000000000000000 l    d  .comment	0000000000000000              .comment
0000000000000000 l    d  .debug_aranges	0000000000000000              .debug_aranges
0000000000000000 l    d  .debug_info	0000000000000000              .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000              .debug_abbrev
0000000000000000 l    d  .debug_line	0000000000000000              .debug_line
0000000000000000 l    d  .debug_str	0000000000000000              .debug_str
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000001150 l     F .text	0000000000000000              deregister_tm_clones
0000000000001180 l     F .text	0000000000000000              register_tm_clones
00000000000011c0 l     F .text	0000000000000000              __do_global_dtors_aux
0000000000004028 l     O .bss	0000000000000001              completed.8061
0000000000003d80 l     O .fini_array	0000000000000000              __do_global_dtors_aux_fini_array_entry
0000000000001200 l     F .text	0000000000000000              frame_dummy
0000000000003d78 l     O .init_array	0000000000000000              __frame_dummy_init_array_entry
0000000000000000 l    df *ABS*	0000000000000000              testloop.c
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
00000000000021a4 l     O .eh_frame	0000000000000000              __FRAME_END__
0000000000000000 l    df *ABS*	0000000000000000              
0000000000003d80 l       .init_array	0000000000000000              __init_array_end
0000000000003d88 l     O .dynamic	0000000000000000              _DYNAMIC
0000000000003d78 l       .init_array	0000000000000000              __init_array_start
0000000000002030 l       .eh_frame_hdr	0000000000000000              __GNU_EH_FRAME_HDR
0000000000003f88 l     O .got	0000000000000000              _GLOBAL_OFFSET_TABLE_
0000000000001000 l     F .init	0000000000000000              _init
0000000000001360 g     F .text	0000000000000005              __libc_csu_fini
0000000000000000       F *UND*	0000000000000000              pthread_create@@GLIBC_2.2.5
0000000000001209 g     F .text	0000000000000045              modifyloop
0000000000000000  w      *UND*	0000000000000000              _ITM_deregisterTMCloneTable
0000000000004000  w      .data	0000000000000000              data_start
0000000000000000       F *UND*	0000000000000000              puts@@GLIBC_2.2.5
000000000000402c g     O .bss	0000000000000004              loop
0000000000004010 g       .data	0000000000000000              _edata
0000000000001368 g     F .fini	0000000000000000              .hidden _fini
0000000000000000       F *UND*	0000000000000000              __stack_chk_fail@@GLIBC_2.4
0000000000000000       F *UND*	0000000000000000              __libc_start_main@@GLIBC_2.2.5
0000000000004000 g       .data	0000000000000000              __data_start
0000000000000000       F *UND*	0000000000000000              fprintf@@GLIBC_2.2.5
0000000000000000  w      *UND*	0000000000000000              __gmon_start__
0000000000004008 g     O .data	0000000000000000              .hidden __dso_handle
0000000000002000 g     O .rodata	0000000000000004              _IO_stdin_used
00000000000012f0 g     F .text	0000000000000065              __libc_csu_init
0000000000004030 g       .bss	0000000000000000              _end
0000000000001120 g     F .text	000000000000002f              _start
0000000000004010 g       .bss	0000000000000000              __bss_start
000000000000124e g     F .text	000000000000009d              main
0000000000000000       F *UND*	0000000000000000              pthread_join@@GLIBC_2.2.5
0000000000000000       F *UND*	0000000000000000              __isoc99_scanf@@GLIBC_2.7
0000000000004010 g     O .data	0000000000000000              .hidden __TMC_END__
0000000000000000  w      *UND*	0000000000000000              _ITM_registerTMCloneTable
0000000000000000       F *UND*	0000000000000000              sleep@@GLIBC_2.2.5
0000000000000000  w    F *UND*	0000000000000000              __cxa_finalize@@GLIBC_2.2.5
0000000000004020 g     O .bss	0000000000000008              stderr@@GLIBC_2.2.5



Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 6a 2f 00 00    	pushq  0x2f6a(%rip)        # 3f90 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 6b 2f 00 00 	bnd jmpq *0x2f6b(%rip)        # 3f98 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <.plt>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	pushq  $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmpq 1020 <.plt>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	pushq  $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmpq 1020 <.plt>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	pushq  $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmpq 1020 <.plt>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	pushq  $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmpq 1020 <.plt>
    109f:	90                   	nop

Disassembly of section .plt.got:

00000000000010a0 <__cxa_finalize@plt>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	f2 ff 25 4d 2f 00 00 	bnd jmpq *0x2f4d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000010b0 <pthread_create@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 e5 2e 00 00 	bnd jmpq *0x2ee5(%rip)        # 3fa0 <pthread_create@GLIBC_2.2.5>
    10bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010c0 <puts@plt>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	f2 ff 25 dd 2e 00 00 	bnd jmpq *0x2edd(%rip)        # 3fa8 <puts@GLIBC_2.2.5>
    10cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010d0 <__stack_chk_fail@plt>:
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	f2 ff 25 d5 2e 00 00 	bnd jmpq *0x2ed5(%rip)        # 3fb0 <__stack_chk_fail@GLIBC_2.4>
    10db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010e0 <fprintf@plt>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	f2 ff 25 cd 2e 00 00 	bnd jmpq *0x2ecd(%rip)        # 3fb8 <fprintf@GLIBC_2.2.5>
    10eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010f0 <pthread_join@plt>:
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	f2 ff 25 c5 2e 00 00 	bnd jmpq *0x2ec5(%rip)        # 3fc0 <pthread_join@GLIBC_2.2.5>
    10fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001100 <__isoc99_scanf@plt>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	f2 ff 25 bd 2e 00 00 	bnd jmpq *0x2ebd(%rip)        # 3fc8 <__isoc99_scanf@GLIBC_2.7>
    110b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001110 <sleep@plt>:
    1110:	f3 0f 1e fa          	endbr64 
    1114:	f2 ff 25 b5 2e 00 00 	bnd jmpq *0x2eb5(%rip)        # 3fd0 <sleep@GLIBC_2.2.5>
    111b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001120 <_start>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	31 ed                	xor    %ebp,%ebp
    1126:	49 89 d1             	mov    %rdx,%r9
    1129:	5e                   	pop    %rsi
    112a:	48 89 e2             	mov    %rsp,%rdx
    112d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1131:	50                   	push   %rax
    1132:	54                   	push   %rsp
    1133:	4c 8d 05 26 02 00 00 	lea    0x226(%rip),%r8        # 1360 <__libc_csu_fini>
    113a:	48 8d 0d af 01 00 00 	lea    0x1af(%rip),%rcx        # 12f0 <__libc_csu_init>
    1141:	48 8d 3d 06 01 00 00 	lea    0x106(%rip),%rdi        # 124e <main>
    1148:	ff 15 92 2e 00 00    	callq  *0x2e92(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    114e:	f4                   	hlt    
    114f:	90                   	nop

0000000000001150 <deregister_tm_clones>:
    1150:	48 8d 3d b9 2e 00 00 	lea    0x2eb9(%rip),%rdi        # 4010 <__TMC_END__>
    1157:	48 8d 05 b2 2e 00 00 	lea    0x2eb2(%rip),%rax        # 4010 <__TMC_END__>
    115e:	48 39 f8             	cmp    %rdi,%rax
    1161:	74 15                	je     1178 <deregister_tm_clones+0x28>
    1163:	48 8b 05 6e 2e 00 00 	mov    0x2e6e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    116a:	48 85 c0             	test   %rax,%rax
    116d:	74 09                	je     1178 <deregister_tm_clones+0x28>
    116f:	ff e0                	jmpq   *%rax
    1171:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1178:	c3                   	retq   
    1179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001180 <register_tm_clones>:
    1180:	48 8d 3d 89 2e 00 00 	lea    0x2e89(%rip),%rdi        # 4010 <__TMC_END__>
    1187:	48 8d 35 82 2e 00 00 	lea    0x2e82(%rip),%rsi        # 4010 <__TMC_END__>
    118e:	48 29 fe             	sub    %rdi,%rsi
    1191:	48 89 f0             	mov    %rsi,%rax
    1194:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1198:	48 c1 f8 03          	sar    $0x3,%rax
    119c:	48 01 c6             	add    %rax,%rsi
    119f:	48 d1 fe             	sar    %rsi
    11a2:	74 14                	je     11b8 <register_tm_clones+0x38>
    11a4:	48 8b 05 45 2e 00 00 	mov    0x2e45(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    11ab:	48 85 c0             	test   %rax,%rax
    11ae:	74 08                	je     11b8 <register_tm_clones+0x38>
    11b0:	ff e0                	jmpq   *%rax
    11b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    11b8:	c3                   	retq   
    11b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011c0 <__do_global_dtors_aux>:
    11c0:	f3 0f 1e fa          	endbr64 
    11c4:	80 3d 5d 2e 00 00 00 	cmpb   $0x0,0x2e5d(%rip)        # 4028 <completed.8061>
    11cb:	75 2b                	jne    11f8 <__do_global_dtors_aux+0x38>
    11cd:	55                   	push   %rbp
    11ce:	48 83 3d 22 2e 00 00 	cmpq   $0x0,0x2e22(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    11d5:	00 
    11d6:	48 89 e5             	mov    %rsp,%rbp
    11d9:	74 0c                	je     11e7 <__do_global_dtors_aux+0x27>
    11db:	48 8b 3d 26 2e 00 00 	mov    0x2e26(%rip),%rdi        # 4008 <__dso_handle>
    11e2:	e8 b9 fe ff ff       	callq  10a0 <__cxa_finalize@plt>
    11e7:	e8 64 ff ff ff       	callq  1150 <deregister_tm_clones>
    11ec:	c6 05 35 2e 00 00 01 	movb   $0x1,0x2e35(%rip)        # 4028 <completed.8061>
    11f3:	5d                   	pop    %rbp
    11f4:	c3                   	retq   
    11f5:	0f 1f 00             	nopl   (%rax)
    11f8:	c3                   	retq   
    11f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001200 <frame_dummy>:
    1200:	f3 0f 1e fa          	endbr64 
    1204:	e9 77 ff ff ff       	jmpq   1180 <register_tm_clones>

0000000000001209 <modifyloop>:
    1209:	f3 0f 1e fa          	endbr64 
    120d:	55                   	push   %rbp
    120e:	48 89 e5             	mov    %rsp,%rbp
    1211:	48 83 ec 10          	sub    $0x10,%rsp
    1215:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1219:	bf 01 00 00 00       	mov    $0x1,%edi
    121e:	e8 ed fe ff ff       	callq  1110 <sleep@plt>
    1223:	48 8d 3d da 0d 00 00 	lea    0xdda(%rip),%rdi        # 2004 <_IO_stdin_used+0x4>
    122a:	e8 91 fe ff ff       	callq  10c0 <puts@plt>
    122f:	48 8d 35 f6 2d 00 00 	lea    0x2df6(%rip),%rsi        # 402c <loop>
    1236:	48 8d 3d de 0d 00 00 	lea    0xdde(%rip),%rdi        # 201b <_IO_stdin_used+0x1b>
    123d:	b8 00 00 00 00       	mov    $0x0,%eax
    1242:	e8 b9 fe ff ff       	callq  1100 <__isoc99_scanf@plt>
    1247:	b8 00 00 00 00       	mov    $0x0,%eax
    124c:	c9                   	leaveq 
    124d:	c3                   	retq   

000000000000124e <main>:
    124e:	f3 0f 1e fa          	endbr64 
    1252:	55                   	push   %rbp
    1253:	48 89 e5             	mov    %rsp,%rbp
    1256:	48 83 ec 10          	sub    $0x10,%rsp
    125a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1261:	00 00 
    1263:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1267:	31 c0                	xor    %eax,%eax
    1269:	c7 05 b9 2d 00 00 01 	movl   $0x1,0x2db9(%rip)        # 402c <loop>
    1270:	00 00 00 
    1273:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    1277:	b9 00 00 00 00       	mov    $0x0,%ecx
    127c:	48 8d 15 86 ff ff ff 	lea    -0x7a(%rip),%rdx        # 1209 <modifyloop>
    1283:	be 00 00 00 00       	mov    $0x0,%esi
    1288:	48 89 c7             	mov    %rax,%rdi
    128b:	e8 20 fe ff ff       	callq  10b0 <pthread_create@plt>
    1290:	eb 01                	jmp    1293 <main+0x45>
    1292:	90                   	nop
    1293:	8b 05 93 2d 00 00    	mov    0x2d93(%rip),%eax        # 402c <loop>
    1299:	83 f8 01             	cmp    $0x1,%eax
    129c:	74 f4                	je     1292 <main+0x44>
    129e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    12a2:	be 00 00 00 00       	mov    $0x0,%esi
    12a7:	48 89 c7             	mov    %rax,%rdi
    12aa:	e8 41 fe ff ff       	callq  10f0 <pthread_join@plt>
    12af:	8b 15 77 2d 00 00    	mov    0x2d77(%rip),%edx        # 402c <loop>
    12b5:	48 8b 05 64 2d 00 00 	mov    0x2d64(%rip),%rax        # 4020 <stderr@@GLIBC_2.2.5>
    12bc:	48 8d 35 5b 0d 00 00 	lea    0xd5b(%rip),%rsi        # 201e <_IO_stdin_used+0x1e>
    12c3:	48 89 c7             	mov    %rax,%rdi
    12c6:	b8 00 00 00 00       	mov    $0x0,%eax
    12cb:	e8 10 fe ff ff       	callq  10e0 <fprintf@plt>
    12d0:	b8 00 00 00 00       	mov    $0x0,%eax
    12d5:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    12d9:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    12e0:	00 00 
    12e2:	74 05                	je     12e9 <main+0x9b>
    12e4:	e8 e7 fd ff ff       	callq  10d0 <__stack_chk_fail@plt>
    12e9:	c9                   	leaveq 
    12ea:	c3                   	retq   
    12eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000012f0 <__libc_csu_init>:
    12f0:	f3 0f 1e fa          	endbr64 
    12f4:	41 57                	push   %r15
    12f6:	4c 8d 3d 7b 2a 00 00 	lea    0x2a7b(%rip),%r15        # 3d78 <__frame_dummy_init_array_entry>
    12fd:	41 56                	push   %r14
    12ff:	49 89 d6             	mov    %rdx,%r14
    1302:	41 55                	push   %r13
    1304:	49 89 f5             	mov    %rsi,%r13
    1307:	41 54                	push   %r12
    1309:	41 89 fc             	mov    %edi,%r12d
    130c:	55                   	push   %rbp
    130d:	48 8d 2d 6c 2a 00 00 	lea    0x2a6c(%rip),%rbp        # 3d80 <__do_global_dtors_aux_fini_array_entry>
    1314:	53                   	push   %rbx
    1315:	4c 29 fd             	sub    %r15,%rbp
    1318:	48 83 ec 08          	sub    $0x8,%rsp
    131c:	e8 df fc ff ff       	callq  1000 <_init>
    1321:	48 c1 fd 03          	sar    $0x3,%rbp
    1325:	74 1f                	je     1346 <__libc_csu_init+0x56>
    1327:	31 db                	xor    %ebx,%ebx
    1329:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1330:	4c 89 f2             	mov    %r14,%rdx
    1333:	4c 89 ee             	mov    %r13,%rsi
    1336:	44 89 e7             	mov    %r12d,%edi
    1339:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    133d:	48 83 c3 01          	add    $0x1,%rbx
    1341:	48 39 dd             	cmp    %rbx,%rbp
    1344:	75 ea                	jne    1330 <__libc_csu_init+0x40>
    1346:	48 83 c4 08          	add    $0x8,%rsp
    134a:	5b                   	pop    %rbx
    134b:	5d                   	pop    %rbp
    134c:	41 5c                	pop    %r12
    134e:	41 5d                	pop    %r13
    1350:	41 5e                	pop    %r14
    1352:	41 5f                	pop    %r15
    1354:	c3                   	retq   
    1355:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    135c:	00 00 00 00 

0000000000001360 <__libc_csu_fini>:
    1360:	f3 0f 1e fa          	endbr64 
    1364:	c3                   	retq   

Disassembly of section .fini:

0000000000001368 <_fini>:
    1368:	f3 0f 1e fa          	endbr64 
    136c:	48 83 ec 08          	sub    $0x8,%rsp
    1370:	48 83 c4 08          	add    $0x8,%rsp
    1374:	c3                   	retq   
